//We have to paint n boards of length {A1, A2, .. An}. There are k painters available and each takes 1 unit time to paint 1 unit of board. The problem is to find the minimum time to get this job done under the constraints that any painter will only paint continuous sections of board to paint
import java.util.*;
public class HelloWorld{
    static int meth(int a[],int mid)
    {
        int count=1;int sum=0;
        for(int i=0;i<a.length;i++)
        {
            sum+=a[i];
            if(sum>mid)
            {
                count++;
                sum=a[i];
            }
        }
        return count;
    }

     public static void main(String []args){
         Scanner s=new Scanner(System.in);
        int y=s.nextInt();
        for(int q=0;q<y;q++){
        int n=s.nextInt();
        int k=s.nextInt();
        int a[]=new int[n];
        int max=Integer.MIN_VALUE;int sum=0;
        for(int i=0;i<n;i++)
        {
            a[i]=s.nextInt();
            if(a[i]>max)
            max=a[i];
            sum+=a[i];
        }
        int low=max,high=sum;int mid;int ans=0;
        while(low<=high)
        {mid=(low+high)/2;
        if(meth(a,mid)<=k)
        {
            ans=mid;
            high=mid-1;
        }
        else
        low=mid+1;
            
        }
        System.out.println(ans);}
        
        
        
     }
}