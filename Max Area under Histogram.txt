//b[i] stores the index if frst smaller element index corresponding to a[i] from left to right
//c[i] stores the index if frst smaller element index corresponding to a[i] from right to left
/*
for input array 0 1 2 3 4 5 6
          a[i]= 6  2  5  4  5  1  6
          b[i]= 1  5  3  5  5  7  7//stores frst smaller index on right if not there stores n.
          c[i]=-1 -1  1  1  3 -1  5//stores frst smaller element index on left if not there stores -1.
then to get max area check max(b[i]-c[i])*a[i] --->maximum for each multiplication
*/

import java.util.*;
import java.io.*;
public class HelloWorld{
     public static void main(String []args)throws IOException{
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringBuilder sb=new StringBuilder();
        int z=Integer.parseInt(br.readLine());
        while(z-->0){
        int n=Integer.parseInt(br.readLine());
        int a[]=new int[n];
        int g=0;
        StringTokenizer p=new StringTokenizer(br.readLine());
        while(p.hasMoreTokens())
        {
            a[g]=Integer.parseInt(p.nextToken());g++;
        }
        int b[]=new int[n];
        Arrays.fill(b,n);
        int c[]=new int[n];
        Arrays.fill(c,-1);
        //System.out.println(Arrays.toString(a));
        Stack<Integer> st=new Stack<>();
        for(int i=0;i<n;i++){
           while(!st.isEmpty()&&(a[st.peek()]>a[i]))
           {
               b[st.peek()]=i;st.pop();
           }
           st.push(i);
        }
       // System.out.println(Arrays.toString(b));
        Stack<Integer> t=new Stack<>();
        for(int j=n-1;j>=0;j--)
        {
            while(!t.isEmpty()&&(a[t.peek()]>a[j]))
            {
                c[t.peek()]=j;t.pop();
            }
            t.push(j);
        }
       // System.out.println(Arrays.toString(c));
        int max=0;
        for(int i=0;i<n;i++)
        {
            max=Math.max(max,((b[i]-c[i]-1)*a[i]));
        }
        sb.append(max+"\n");
        }
        System.out.println(sb.toString());
     }
}