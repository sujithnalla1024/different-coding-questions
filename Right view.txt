// in level by level order last elements in each level is right view
import java.io.*;
import java.util.*;
class Node{
    int data;Node left;Node right;
    Node(int k){
        data=k;
        left=right=null;
    }
}
public class Solution {
    static Node insert(Node root,int k){
        if(root==null)
            return new Node(k);
        else if(k>root.data)
            root.right=insert(root.right,k);
        else
            root.left=insert(root.left,k);
        return root;
    }
   /* static void print(Node root){
        if(root==null)
            return;
        print(root.left);
        print(root.right);
        System.out.println(root.data);
    }*/
    static List<List<Integer>> zigzag(Node root){
        List<List<Integer>> lt=new ArrayList<>();
        if(root==null)
            return null;
        Queue<Node> q=new LinkedList<>();
        q.add(root);
        int level=1;
        while(!q.isEmpty()){
            int w=q.size();
            List<Integer> list=new ArrayList<>();
            for(int i=0;i<w;i++){
                Node temp=q.poll();
                if(temp.left!=null)
                    q.add(temp.left);
                if(temp.right!=null)
                    q.add(temp.right);
                    list.add(temp.data);
            }
            //level++;
            lt.add(list);
            
        }
        return lt;
        
    }

    public static void main(String[] args) {
        Scanner s=new Scanner(System.in);
        StringBuilder sb=new StringBuilder();
        int t=s.nextInt();
        while(t-->0){
         int n=s.nextInt();
            Node root=null; 
            for(int i=0;i<n;i++){
                root=insert(root,s.nextInt());
            }
            List<List<Integer>> b=zigzag(root);
            for(List<Integer> x : b){
                sb.append(x.get(x.size()-1)+" ");
            }
            sb.append("\n");
        }
        System.out.println(sb.toString());
    }
}